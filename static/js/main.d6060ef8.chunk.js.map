{"version":3,"sources":["components/AddCategory/index.jsx","utilities/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem/index.jsx","components/GifGrid/index.jsx","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","categories","useState","category","inputValue","setInputValue","error","setError","className","onSubmit","e","preventDefault","includes","prevState","type","name","id","onChange","target","value","size","getGifs","a","limit","offset","query","url","process","fetch","response","json","data","gifs","map","gif","title","images","downsized","useFetchGifs","isLoading","setIsLoading","setGifs","useEffect","encodeURI","then","catch","GifGridItem","img","src","alt","GifGrid","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6060ef8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { MdSearch } from 'react-icons/md';\r\n\r\nimport './styles.css';\r\n\r\nconst AddCategory = ({ setCategories, categories }) => {\r\n  const [inputValue, setInputValue] = useState({\r\n    category: '',\r\n  });\r\n  const [error, setError] = useState(false);\r\n\r\n  const { category } = inputValue;\r\n\r\n  const handleChange = (e) => {\r\n    setInputValue({\r\n      ...inputValue,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (categories.includes(inputValue.category)) {\r\n      setError(true);\r\n      return;\r\n    }\r\n    setCategories((prevState) => [inputValue.category, ...prevState]);\r\n    setError(false);\r\n    setInputValue({ category: '' });\r\n  };\r\n\r\n  return (\r\n    <form className={`search ${error && 'error'}`} onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"search__input\"\r\n        type=\"text\"\r\n        name=\"category\"\r\n        id=\"category\"\r\n        onChange={handleChange}\r\n        value={category}\r\n      />\r\n      <button className=\"search__button\">\r\n        <MdSearch size=\"25px\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","const getGifs = async ({\r\n  limit = 20,\r\n  offset = 0,\r\n  query = 'trendings',\r\n} = {}) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${query}&limit=${limit}&offset=${offset}&rating=r&api_key=${process.env.REACT_APP_API_KEY}`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  const gifs = data.map((gif) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images.downsized.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\nexport default getGifs;\r\n","import { useEffect, useState } from 'react';\r\nimport getGifs from '../utilities/getGifs';\r\n\r\nconst useFetchGifs = ({ query = 'Dragon Ball Z' }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [gifs, setGifs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getGifs({ query: encodeURI(query) })\r\n      .then((gifs) => {\r\n        setGifs(gifs);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(() => setError(false));\r\n  }, [query]);\r\n\r\n  return { isLoading, error, gifs };\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst GifGridItem = ({ img }) => {\r\n  return (\r\n    <figure className=\"container__gif animate__animated animate__fadeInDown\">\r\n      <img className=\"gif\" src={img.url} alt={img.title} />\r\n      <figcaption className=\"gif__caption\">{img.title}</figcaption>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\n\r\nimport useFetchGifs from '../../hooks/useFetchGifs';\r\nimport GifGridItem from '../GifGridItem';\r\nimport './styles.css';\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { gifs, isLoading, error } = useFetchGifs({ query: category });\r\n\r\n  if (isLoading) return <h1>Loading...</h1>;\r\n  if (error) return <h1>Hubo un error :(</h1>;\r\n  return (\r\n    <div>\r\n      <h3 className=\"text__category\">{category}</h3>\r\n      <div className=\"grid__gifs\">\r\n        {gifs.map((gif) => (\r\n          <GifGridItem key={gif.id} img={gif} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './AddCategory/index';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['Dragon Ball Z']);\r\n  return (\r\n    <>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategory categories={categories} setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}